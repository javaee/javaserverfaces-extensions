<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sun.faces.assembly</groupId>
  <artifactId>jsf-extensions</artifactId>
  <packaging>pom</packaging>
  <name>Build the distribution</name>
  <version>0.1</version>
  <description>Build the distribution</description>
  <url>https://jsf-extensions.dev.java.net/</url>

  <scm>
    <connection>scm:svn:http://jsf-extensions.dev.java.net/svn/jsf-extensions/trunk</connection>
    <developerConnection>scm:svn:https://jsf-extensions.dev.java.net/svn/jsf-extensions/trunk</developerConnection>
    <url>https://jsf-extensions.dev.java.net/source/browse/jsf-extensions/</url>
  </scm>

  <build>
    <defaultGoal>package</defaultGoal>
    <finalName>jsf-extensions</finalName>
        <plugins>
       <plugin>
	 <artifactId>maven-antrun-plugin</artifactId>
	 <executions>
	   <execution>
             <id>dist</id>
	     <phase>package</phase>
	     <configuration>
	       <tasks>
                 <echo message="Building distribution" />
                 <mkdir dir="target/dist/lib" />
                 <copy todir="target/dist/lib">
                   <fileset dir="../run-time/avatar/target">
                     <include name="*.jar" />
                   </fileset>
                   <fileset dir="../run-time/flash/target">
                     <include name="*.jar" />
                   </fileset>
                   <fileset dir="../run-time/common/target">
                     <include name="*.jar" />
                   </fileset>
                   <fileset dir="../test-time/target">
                     <include name="*.jar" />
                   </fileset>
                 </copy>
                 <copy todir="target/dist/">
                   <fileset dir=".">
                     <include name="*.txt" />
                     <include name="COPYRIGHT" />
                   </fileset>
		 </copy>

                 <!-- copy dependent jars, so people can build the samples -->
                 <mkdir dir="target/dist/samples/lib" />

                 <copy todir="target/dist/samples/lib">
                   <fileset dir="../dev-time/target">
                     <include name="*.jar" />
                   </fileset>
                 </copy>

                 <property name="antbuild.dir" 
                           value="${basedir}/ant-buildable-sample-helpers" />

                 <condition property="build.standalone.set">
                   <isset property="build.standalone" />
                 </condition>

                 <!-- copy libs for both standalone and integrated style -->

                 <ant inheritAll="true" dir="${antbuild.dir}" 
                      antfile="${antbuild.dir}/copy-libs.xml">
                   <property name="settings.localRepository" 
                             value="${settings.localRepository}" />
                 </ant>

                 <!-- copy the build.xml and README to the distro -->

                 <copy tofile="target/dist/samples/build.properties" file="${antbuild.dir}/samples.properties"/>
                 <copy tofile="target/dist/samples/build.xml" file="${antbuild.dir}/base-build.xml"/>

                 <copy tofile="target/dist/samples/README.html" file="${antbuild.dir}/README.html"/>

                 <!-- copy the source files of each sample to the distro -->

		 <condition property="extra.excludes" 
                            value="jmaki/src/main/webapp/resources/**/*.*">
                   <not>
                     <isset property="build.standalone" />
                   </not>
		 </condition>

		 <condition property="extra.includes" 
                           value="jmaki/src/main/webapp/resources/config.json">
                   <not>
                     <isset property="build.standalone" />
                   </not>
		 </condition>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="jmaki" />
                   <property name="extra.includes" value="${extra.includes}" />
                   <property name="extra.excludes" value="${extra.excludes}" />
                 </ant>

                 <copy overwrite="true" todir="${basedir}/target/dist/samples">
                   <fileset dir="${basedir}/../run-time/samples">
                     <include unless="build.standalone" 
                              name="${extra.includes}"/>
                   </fileset>
                 </copy>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="blank-facelets" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="blank-jsp" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="cardemo" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="fire-ajax-transaction" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/apply-sunbrand-using-ant.xml">
                   <property name="appname" value="flash" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="flash" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/apply-sunbrand-using-ant.xml">
                   <property name="appname" value="simple-events" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="simple-events" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/apply-sunbrand-using-ant.xml">
                   <property name="appname" value="simple-partial-update" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="simple-partial-update" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="tictactoe" />
                 </ant>

                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/apply-sunbrand-using-ant.xml">
                   <property name="appname" value="jmaki" />
                 </ant>

<!-- PENDING(edburns): 20070124 jsf-extensions issue 50
                 <ant inheritAll="false" dir="${antbuild.dir}" antfile="${antbuild.dir}/copy-sample-from-maven-to-dist-using-ant.xml">
                   <property name="appname" value="j1" />
                 </ant>
-->

                 <tar destfile="target/jsf-extensions-${pom.version}.tar"
                      basedir="target/dist" />
                 <gzip src="target/jsf-extensions-${pom.version}.tar" 
                        destfile="target/jsf-extensions-${pom.version}.tar.gz"/>

	       </tasks>
	     </configuration>
	     <goals>
	       <goal>run</goal>
	     </goals>
	   </execution>
	 </executions>
       </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
	<module>..</module>
      </modules>
    </profile>
    <profile>
      <id>local</id>
    </profile>
  </profiles>

</project>
