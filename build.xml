<?xml version="1.0"?>

<project name="prototype" basedir="." default="build">

	<property name="project.name" value="${ant.project.name}"/>
	<property name="project.version" value="1.0"/>
	<property name="project.name.version" value="${project.name}-${project.version}"/>
	<property name="dist.dir" value="dist"></property>
	<property name="target.jar.name" value="${project.name.version}.jar"/>
	<property name="target.jar" value="${dist.dir}/${project.name.version}.jar"/>
	<property name="target.war.name" value="${ant.project.name}.war"/>
	<property name="target.war" value="${dist.dir}/${target.war.name}"/>		
	<property name="src.dir" value="src"/>
	<property name="lib.dir" value="lib"/>
	<property name="build.dir" value="build"/>
	<property name="webapp.dir" value="${build.dir}/webapp"/>
	<property name="webinf.dir" value="${webapp.dir}/WEB-INF"/>
	<property name="classes.dir" value="${webinf.dir}/classes"/>
	<property name="manifest" value="${src.dir}/META-INF/MANIFEST.MF"/>
	<property name="javadoc.dir" value="${build.dir}/javadocs"/>	
	<property name="test.dir" value="test"/>
	<property name="test.classes.dir" value="${test.dir}/classes"/>
	<property name="test.data.dir" value="${test.dir}/data"/>
	<property name="test.reports.dir" value="${test.dir}/reports"/>
	<property name="test.suite" value="org.metamorfaces.test"/>
	<property name="conf.dir" value="conf"/>
		
	
	<path id="compile.classpath">
		
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
			
	</path>
	
	<path id="run.classpath">
	
		<path refid="compile.classpath"/>
		<pathelement location="${classes.dir}"/>
		
	</path>

	<path id="test.compile.classpath">
				
		<path refid="run.classpath"/>
		<pathelement location="${test.dir}"/>
		<pathelement location="${test.dir}/resources"/>			
	</path>
	
	<path id="test.classpath">
		
			<path refid="test.compile.classpath"/>
			<pathelement location="${test.classes.dir}"/>
			
	</path>
	
	<target name="clean" description="Delete files generated by the build">
		
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"></delete>
		
	</target>
		
	<target name="clean-test" description="Delete files generated by the test">
	
		<delete dir="${test.classes.dir}"/>
		<delete dir="${test.data.dir}"/>
		<delete dir="${test.reports.dir}"/>

		
	</target>
	
	<target name="init"  description="Create the directories for the build">
	
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${webapp.dir}"/>
		<mkdir dir="${webinf.dir}"/>
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${webinf.dir}/lib"/>
		<mkdir dir="${dist.dir}"/>
				
		
	</target>
	
	
	<target name="compile" depends="init" description="compile the java code">
	
		<javac srcdir="${src.dir}" destdir="${classes.dir}">
		
			<classpath refid="compile.classpath"></classpath>
		
		</javac>
	
		
		
	</target>
	
	<target name="test-init" description="create the tests directory">
		
			<mkdir dir="${test.classes.dir}"/>
			<delete dir="${test.data.dir}"></delete>
			<delete dir="${test.reports.dir}"></delete>
			<mkdir dir="${test.data.dir}"/>
			<mkdir dir="${test.reports.dir}"/>
		</target>
		
		<target name="test-compile" depends="clean-test,compile,test-init" description="compile the test classes">
		
			<javac destdir="${test.classes.dir}"
			debug="true"
			srcdir="${test.dir}/src">
			<classpath refid="test.compile.classpath"/>
			</javac>
			
		</target>
		
		<target name="test" depends="test-compile" description="make the tests">
		
			<junit  haltonfailure="false" failureproperty="test.failed" errorproperty="test.failed">
			<classpath refid="test.classpath"/>
			<formatter type="brief" usefile="false"/>
			<formatter type="xml"/>
			<test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
			<batchtest todir="${test.data.dir}" unless="testcase">
				<fileset dir="${test.classes.dir}" includes="**/Test*.class"/>
			</batchtest>
				
			</junit>
		</target>
		
		<target name="test-reporting" depends="test" description="make tests reporting">
			
			<junitreport todir="${test.data.dir}">
			
				<fileset dir="${test.data.dir}">
					<include name="TEST-*.xml"/>
				</fileset>
				
				<report format="frames" todir="${test.reports.dir}"/>
				
			</junitreport>
			
			<fail if="test.failed">
				Tests failed. Check ${test.reports.dir}
			</fail>
			
		</target>
	
	<target name="javadocs" depends="compile" description="make the java docs">
		
		<mkdir dir="${javadoc.dir}"/>
		
		<javadoc
			access="private"
			sourcepath="${src.dir}"
			destdir="${javadoc.dir}"
			use="true"
			version="true"
			windowtitle="${ant.project.name}"
			failonerror="true">
			
			<classpath refid="compile.classpath"></classpath>
			
		</javadoc>
	</target>
	
	
	<target name="jar" depends="clean,compile,test" description="make the jar">
			
				<fail if="test.failed">
						Tests failed. 
				</fail>
				
			
			<jar  basedir="${classes.dir}"  jarfile="${target.jar}" >
				
					
			</jar>
				
				
			</target>
		
	
	<target name="build" depends="clean,compile,test" description="build the application">
			
				<fail if="test.failed">
						Tests failed. 
				</fail>
				

				<copy  todir="${webinf.dir}" overwrite="true">
					<fileset dir="${conf.dir}"/>
				</copy>
			
				
				<copy todir="${webinf.dir}/lib" overwrite="true">
					<fileset dir="${lib.dir}">
					
						<exclude name="jsf-api.jar"/>
						<exclude name="jsf-impl.jar"/>
												
						
					</fileset>
				</copy>			
				
				
			</target>
	
	
	<target name="war" depends="clean,compile,test,build" description="make the war">
		
			
			
		<war  destfile="${target.war}" duplicate="preserve" webxml="${webinf.dir}/web.xml">
				
					<fileset dir="${webapp.dir}"/>
				
		</war>
			
			
		</target>
	
	
	
	
</project>