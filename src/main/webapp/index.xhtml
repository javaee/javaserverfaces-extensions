    <ui:composition template="#{template}" xmlns="http://www.w3.org/1999/xhtml"  
      xmlns:h="http://java.sun.com/jsf/html"  
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core">
  
      <ui:define name="menu">     
    	<ui:include src="menu.xhtml"/>
      </ui:define>

	<ui:define name="content">
	
	<h2>Get Started</h2>
	
<p>JavaServer Faces (JSF) is the standard component-oriented user interface (UI) framework for the Java EE platform. In terms which may sound more familiar, it's a Java-based web framework.
JSF is included in the Java EE platform, so you can create applications that use JSF without adding any extra libraries in your project. JSF works equally as well as a standalone web framework, able to hook into bean containers such as Spring. How you use JSF is up to you.
<b>The fastest way to get started</b> with JSF is to create a project using a Maven archetype. Instructions are provided on the <a href="http://www.javaserverfaces.org/get-started">Get Started</a> page.</p>
	
	<h2>Ecosystem</h2>
<p>Beyond just a web framework, JSF offers an ecosystem of portable UI component libraries and extensions. This means you can take a UI component from a library, such as a tree or scrollable table, and use it on any JSF implementation.
Most of the UI component libraries focus on providing rich UI components, and "rich" often involves Ajax. JSF 2.0 provides a common JavaScript API that UI components can use to help promote interoperability.</p>
	
	</ui:define>
      
      </ui:composition>        
             